version: "3.9"

services:
    logstash:
        container_name: logstash
        image: docker.elastic.co/logstash/logstash:7.16.3
        restart: always
        volumes:
            - ./product_service/logs:/logs
            - ./configs/pipeline:/usr/share/logstash/pipeline/
            - ./configs/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
        environment:
            monitoring.elasticsearch.hosts: '["http://elasticsearch:9200"]'
        ports:
            - 5044:5044
        depends_on:
            - filebeat
        networks:
            onlineshop_network:
        profiles: ["prod"]
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M

    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.16.3
        restart: always
        ports:
            - 5601:5601
        environment:
            ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
        networks:
            onlineshop_network:
        profiles: ["prod"]
        depends_on:
            - elasticsearch
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
        restart: always
        volumes:
            - ./configs/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml:ro
        ports:
            - 9200:9200
            - 9300:9300
        environment:
            discovery.type: single-node
        networks:
            onlineshop_network:
        profiles: ["prod"]
        depends_on:
            - filebeat
            - logstash
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M

    filebeat:
        container_name: filebeat
        image: docker.elastic.co/beats/filebeat:7.16.3
        restart: always
        networks:
            onlineshop_network:
        volumes:
            - ./product_service/logs:/logs
            - ./configs/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        command: filebeat -e -strict.perms=false
        environment:
            setup.kibana.host: kibana:5601
        profiles: ["prod"]
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M

    product-service-db:
        container_name: product-service-db
        image: postgres:latest
        restart: always
        environment:
            POSTGRES_DB: product_service
            POSTGRES_USER: root
            POSTGRES_PASSWORD: root
        networks:
            onlineshop_network:
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M
        profiles: ["dev", "prod"]

    product-service:
        build: product_service
        image: onlineshop/product-service:latest
        restart: always
        volumes:
            - ./product_service/logs:/logs
        environment:
            spring.application.name: product-service
            spring.datasource.url: jdbc:postgresql://product-service-db/product_service
            spring.datasource.username: root
            spring.datasource.password: root
            spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL95Dialect
            spring.datasource.driver-class-name: org.postgresql.Driver
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
        ports:
            - 9000:8080
        depends_on:
            product-service-db:
                condition: service_started
            eureka-service:
                condition: service_started
        networks:
            onlineshop_network:
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M
        profiles: ["dev", "prod"]

    customer-service-db:
        container_name: customer-service-db
        image: postgres:latest
        restart: always
        environment:
            POSTGRES_DB: customer_service
            POSTGRES_USER: root
            POSTGRES_PASSWORD: root
        networks:
            onlineshop_network:
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M
        profiles: ["dev", "prod"]

    customer-service:
        build: customer_service
        image: onlineshop/customer-service:latest
        restart: always
        environment:
            spring.datasource.url: jdbc:postgresql://customer-service-db/customer_service
            spring.datasource.username: root
            spring.datasource.password: root
            spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL95Dialect
            spring.datasource.driver-class-name: org.postgresql.Driver
        ports:
            - 9001:8080
        depends_on:
            customer-service-db:
                condition: service_started
            eureka-service:
                condition: service_started
        networks:
            onlineshop_network:
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M
        profiles: ["dev", "prod"]

    eureka-service:
        build: eureka_service
        image: onlineshop/eureka-service:latest
        restart: always
        ports:
            - 8761:8761
        networks:
            onlineshop_network:
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M
        profiles: ["dev", "prod"]

    portainer:
        container_name: portainer
        image: cr.portainer.io/portainer/portainer-ce:2.11.0
        restart: always
        ports:
            - 8000:8000
            - 9443:9443
        volumes:
            - portainer_data:/data
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            onlineshop_network:
        profiles: ["prod"]
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
                reservations:
                    cpus: '0.25'
                    memory: 100M

networks:
    onlineshop_network:
        driver: bridge

volumes:
    portainer_data:
